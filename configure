#!/bin/bash

function USAGE() {
    echo "Usage: $0 [OPTION]"
    echo "OPTION:"
    echo "  -h, --help      help"
    echo "  -p, --prefix    prefix directory"
    echo "  -c, --clean    rm makefile"
}

makef=makefile

instf=install.sh   # file to specify install method
uninstf=create-uninstall.sh # file to create uninstall script

# parse options
prefix='/usr/local'

ARGS=`getopt -o hp:c --long help,prefix:,clean -n $0 -- "$@"`
if [ $? != 0 ]; then USAGE; exit -1; fi

eval set -- "$ARGS"
while :
do
    opt="$1"
    case "$1" in
        -h|--help) USAGE; exit;;
        -c|--clean) echo "remove $makef"; rm $makef; exit;;
        -p|--prefix) prefix=$2; shift 2;;
        --) shift; break;;
    esac
done

if [ x"$prefix" != x"/" ]; then prefix=${prefix%/}/; fi

bindir=${prefix}bin
echo "prefix: $prefix"

# subprojects
declare -a projs
n=0
for d in `ls`
do
    if [ ! -d "$d" ]; then continue; fi
    projs[$n]=$d
    ((n++))
done

echo -n "${#projs[@]} projects:"
for d in "${projs[@]}"; do echo -n " $d"; done
echo

# basic set
echo "bindir=$bindir" >$makef

# .PHONY
echo -ne "\n.PHONY: all install clean" >>$makef
for d in "${projs[@]}"; do echo -n " $d" >>$makef; done
for d in "${projs[@]}"; do echo -n " ${d}_clean" >>$makef; done
echo >>$makef

################################
########### for make ###########

echo -e "\nall:" >>$makef
echo -e "\t@echo 'all is ready:'" >>$makef

echo -ne "\t@echo \"    " >>$makef
## output projects
echo -n "${#projs[@]} projects:" >>$makef
for d in "${projs[@]}"; do echo -n " $d" >>$makef; done
echo "\"" >>$makef

## usage
echo -e "\t@echo \"    type 'make install' to install all\"" >>$makef
echo -e "\t@echo \"    type 'make PROJ-NAME' to install single project\"" >>$makef

################################
####### for install task #######

## make install
echo -ne "\ninstall:" >>$makef
for d in "${projs[@]}"; do echo -n " $d" >>$makef; done
echo >>$makef

## make single project
echo
for proj in "${projs[@]}"
do
    echo -n "make $proj: "
    echo -e "\n$proj:" >>$makef
    echo -e "\t@echo make $proj" >>$makef

    if ! ls "$proj/$instf" &>/dev/null; then
        echo "normal install"
        for fname in $(ls $proj/*.sh)
        do
            fname=`basename $fname`
            fexe=${fname%.sh}
            echo "    $fname ==> $bindir/$fexe"
            echo -e "\tcp $proj/$fname \$(bindir)/$fexe" >>$makef
        done
    else
        echo "special install"
        echo "    ./$proj/$instf"
        echo -e "\t./$proj/$instf" >>$makef
    fi
done

################################
######## for clean task ########

## make clean
echo -ne "\nclean:" >>$makef
for d in "${projs[@]}"; do echo -n " ${d}_clean" >>$makef; done
echo >>$makef

## clean single project
echo
for proj in "${projs[@]}"
do
    echo -n "clean $proj: "
    echo -e "\n${proj}_clean:" >>$makef
    echo -e "\t@echo clean $proj" >>$makef

    if ! ls "$proj/$uninstf" &>/dev/null; then
        echo "normal clean"
        for fname in $(ls $proj/*.sh)
        do
            fname=`basename $fname`
            fexe=${fname%.sh}
            echo "    rm $bindir/$fexe"
            echo -e "\trm \$(bindir)/$fexe" >>$makef
        done
    else
        echo "special clean"
        fname_uninst=`./$proj/$uninstf -o $bindir`
        echo "    $fname_uninst"
        echo -e "\t$fname_uninst" >>$makef
    fi
done
